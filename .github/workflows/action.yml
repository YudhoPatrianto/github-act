name: Build Recovery By YudhoPRJKT

on:
  workflow_dispatch:
    inputs:
      RECOVERY_SELECTOR:
        description: 'Choose Your Custom Recovery '
        type: choice
        options:
          - TWRP(twrp-12.1)
          - PBRP(android-12.1)
      TOKEN_BOT_TELEGRAM:
        description: 'Input Your TOKEN Bot Telegram'
        required: true
      CHAT_ID_BOT_TELEGRAM:
        description: 'Input Your ChatID In Telegram'
        required: true
      DEVICE_CODENAME:
        description: 'Input Your Device CODENAME'
        required: true
      API_KEY_FILEIO:
        description: 'Input Your API Key file.io'
        required: true
      DEVICE_TREE_URL:
        description: 'Input Your Device Tree URL'
        required: true
      DEVICE_TREE_BRANCH:
        description: 'Input Your Device Tree Branch'
        required: true
      TARGET_COMMON_LUNCH:
        description: 'Choose Your Lunch'
        required: true
        type: choice
        options:
          - twrp(TWRP)
          - pb(PBRP)
      TARGET_VARIANT:
        description: 'Choose Your Build Variant'
        required: true
        type: choice
        options:
          - bootimage(boot.img)
          - recoveryimage(recovery.img)
          - vendorboot(vendor_boot.img)
      TARGET_BRAND_SELECTOR:
        description: 'Choose Your Brand Phone'
        required: true
        type: choice
        options:
          - xiaomi(Xiaomi)

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Cleanup Disk
      - name: Cleanup Disk
        run: |
          chmod 777 clean_disk.sh 
          sudo bash clean_disk.sh > /dev/null 2>&1
          echo "Cleanup Disk Done"

      # Update And Upgrade Dependency
      - name: Update And Upgrade Repository
        run: |
          sudo apt-get update
          sudo apt-get upgrade -y

      # Installing Dependencies
      - name: Installing Package
        run: |
          sudo apt-get install jq curl gperf gcc-multilib gcc-10-multilib g++-multilib g++-10-multilib libc6-dev lib32ncurses5-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc bc ccache lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libwxgtk3.0-gtk3-dev libxml2 lzop pngcrush schedtool squashfs-tools imagemagick libbz2-dev lzma ncftp qemu-user-static libstdc++-10-dev libncurses5 python3 python2 python-is-python3 rsync -y
      
      # Installing Repo
      - name: Installing Repo
        run: |
          mkdir ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          sudo ln -sf ~/bin/repo /usr/bin/repo    

      # Sync Recovery Source
      - name: Sync Recovery
        run: |
          case "${{ github.event.inputs.RECOVERY_SELECTOR }}" in
            "TWRP(twrp-12.1)")
              # Sync TWRP Branch twrp-12.1
              repo init -u https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp.git -b twrp-12.1

              # Notify Recovery Detail
              curl -s -X POST https://api.telegram.org/bot${{ github.event.inputs.TOKEN_BOT_TELEGRAM }}/sendMessage > /dev/null 2>&1 \
              -d chat_id=${{ github.event.inputs.CHAT_ID_BOT_TELEGRAM }} \
              -d "text=<b>Recovery Details</b>%0A%0A<b>URL Recovery:</b> <code>https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp.git</code> \
              <b>Branch Recovery:</b> <code>twrp-12.1</code>"
              ;;
            "PBRP(android-12.1)")
              # Sync TWRP Branch twrp-12.1
              repo init -u https://github.com/PitchBlackRecoveryProject/manifest_pb -b android-12.1

              # Notify Recovery Detail
              curl -s -X POST https://api.telegram.org/bot${{ github.event.inputs.TOKEN_BOT_TELEGRAM }}/sendMessage > /dev/null 2>&1 \
              -d chat_id=${{ github.event.inputs.CHAT_ID_BOT_TELEGRAM }} \
              -d "text=<b>Recovery Details</b>%0A%0A<b>URL Recovery:</b> <code>https://github.com/PitchBlackRecoveryProject/manifest_pb</code> \
              <b>Branch Recovery:</b> <code>android-12.1</code>"
              ;;
            *)
              echo "Unable To Sync Recovery! "
              # Notify Recovery Detail
              curl -s -X POST https://api.telegram.org/bot${{ github.event.inputs.TOKEN_BOT_TELEGRAM }}/sendMessage > /dev/null 2>&1 \
              -d chat_id=${{ github.event.inputs.CHAT_ID_BOT_TELEGRAM }} \
              -d "text=<b>Unable To Re</b>"
              ;;
          esac

      - name: Send Full Specs To BOT
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ github.event.inputs.TOKEN_BOT_TELEGRAM }}/sendMessage > /dev/null 2>&1 \
          -d chat_id=${{ github.event.inputs.CHAT_ID_BOT_TELEGRAM }} \
          -d "text=<b>YudhoPRJKT-BOT</b>%0A \
          <pre>Specs Information</pre>%0A \
          <b>Users:<b> <code>$(whoami)</code> \
          <b>CPU:<b> <code>$(lscpu | grep 'Model name' | awk -F: '{print $2}' | xargs)</code> \
          <b>Kernel:<b> <code>$(uname -r)</code> \
          <b>OS:<b> <code>$(lsb_release -a 2>/dev/null | awk '/Description/ {print $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13}')</code>"

    # Build Process
      - name: Build Process
        run: |
          case "${{ github.event.inputs.TARGET_COMMON_LUNCH }}" in
            "twrp(TWRP)")
              # Build
              source build/envsetup.sh
              lunch twrp_${{ github.event.inputs.DEVICE_CODENAME }}-eng
              case "${{ github.event.inputs.TARGET_VARIANT }} " in
              "bootimage(boot.img)")
              ;;
            *)
              echo "Unable To Build!"
              ;;
          esac
              ;;
            "tes123")
              echo "ini dari tes123 input"
              ;;
            "hai")
              echo "ini dari hai input"
              ;;
            *)
              echo "gagal"
              ;;
          esac
